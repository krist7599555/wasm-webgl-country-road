pub const TEXTURE0                                    :i32 = 0x84c0;
pub const DYNAMIC_DRAW                                :i32 = 0x88e8;

pub const ARRAY_BUFFER                                :i32 = 0x8892;
pub const ELEMENT_ARRAY_BUFFER                        :i32 = 0x8893;
pub const UNIFORM_BUFFER                              :i32 = 0x8a11;
pub const TRANSFORM_FEEDBACK_BUFFER                   :i32 = 0x8c8e;

pub const TRANSFORM_FEEDBACK                          :i32 = 0x8e22;

pub const COMPILE_STATUS                              :i32 = 0x8b81;
pub const LINK_STATUS                                 :i32 = 0x8b82;
pub const FRAGMENT_SHADER                             :i32 = 0x8b30;
pub const VERTEX_SHADER                               :i32 = 0x8b31;
pub const SEPARATE_ATTRIBS                            :i32 = 0x8c8d;

pub const ACTIVE_UNIFORMS                             :i32 = 0x8b86;
pub const ACTIVE_ATTRIBUTES                           :i32 = 0x8b89;
pub const TRANSFORM_FEEDBACK_VARYINGS                 :i32 = 0x8c83;
pub const ACTIVE_UNIFORM_BLOCKS                       :i32 = 0x8a36;
pub const UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER   :i32 = 0x8a44;
pub const UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER :i32 = 0x8a46;
pub const UNIFORM_BLOCK_DATA_SIZE                     :i32 = 0x8a40;
pub const UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES        :i32 = 0x8a43;

pub const FLOAT                                       :i32 = 0x1406;
pub const FLOAT_VEC2                                  :i32 = 0x8B50;
pub const FLOAT_VEC3                                  :i32 = 0x8B51;
pub const FLOAT_VEC4                                  :i32 = 0x8B52;
pub const INT                                         :i32 = 0x1404;
pub const INT_VEC2                                    :i32 = 0x8B53;
pub const INT_VEC3                                    :i32 = 0x8B54;
pub const INT_VEC4                                    :i32 = 0x8B55;
pub const BOOL                                        :i32 = 0x8B56;
pub const BOOL_VEC2                                   :i32 = 0x8B57;
pub const BOOL_VEC3                                   :i32 = 0x8B58;
pub const BOOL_VEC4                                   :i32 = 0x8B59;
pub const FLOAT_MAT2                                  :i32 = 0x8B5A;
pub const FLOAT_MAT3                                  :i32 = 0x8B5B;
pub const FLOAT_MAT4                                  :i32 = 0x8B5C;
pub const SAMPLER_2D                                  :i32 = 0x8B5E;
pub const SAMPLER_CUBE                                :i32 = 0x8B60;
pub const SAMPLER_3D                                  :i32 = 0x8B5F;
pub const SAMPLER_2D_SHADOW                           :i32 = 0x8B62;
pub const FLOAT_MAT2x3                                :i32 = 0x8B65;
pub const FLOAT_MAT2x4                                :i32 = 0x8B66;
pub const FLOAT_MAT3x2                                :i32 = 0x8B67;
pub const FLOAT_MAT3x4                                :i32 = 0x8B68;
pub const FLOAT_MAT4x2                                :i32 = 0x8B69;
pub const FLOAT_MAT4x3                                :i32 = 0x8B6A;
pub const SAMPLER_2D_ARRAY                            :i32 = 0x8DC1;
pub const SAMPLER_2D_ARRAY_SHADOW                     :i32 = 0x8DC4;
pub const SAMPLER_CUBE_SHADOW                         :i32 = 0x8DC5;
pub const UNSIGNED_INT                                :i32 = 0x1405;
pub const UNSIGNED_INT_VEC2                           :i32 = 0x8DC6;
pub const UNSIGNED_INT_VEC3                           :i32 = 0x8DC7;
pub const UNSIGNED_INT_VEC4                           :i32 = 0x8DC8;
pub const INT_SAMPLER_2D                              :i32 = 0x8DCA;
pub const INT_SAMPLER_3D                              :i32 = 0x8DCB;
pub const INT_SAMPLER_CUBE                            :i32 = 0x8DCC;
pub const INT_SAMPLER_2D_ARRAY                        :i32 = 0x8DCF;
pub const UNSIGNED_INT_SAMPLER_2D                     :i32 = 0x8DD2;
pub const UNSIGNED_INT_SAMPLER_3D                     :i32 = 0x8DD3;
pub const UNSIGNED_INT_SAMPLER_CUBE                   :i32 = 0x8DD4;
pub const UNSIGNED_INT_SAMPLER_2D_ARRAY               :i32 = 0x8DD7;

pub const TEXTURE_2D                                  :i32 = 0x0DE1;
pub const TEXTURE_CUBE_MAP                            :i32 = 0x8513;
pub const TEXTURE_3D                                  :i32 = 0x806F;
pub const TEXTURE_2D_ARRAY                            :i32 = 0x8C1A;


// typeMap[FLOAT]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };
// typeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  };
// typeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  };
// typeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  };
// typeMap[INT]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };
// typeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    };
// typeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    };
// typeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    };
// typeMap[UNSIGNED_INT]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };
// typeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   };
// typeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   };
// typeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   };
// typeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };
// typeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    };
// typeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    };
// typeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    };
// typeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 16, setter: floatMat2Setter,  };
// typeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 36, setter: floatMat3Setter,  };
// typeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  };
// typeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 24, setter: floatMat23Setter, };
// typeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, };
// typeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 24, setter: floatMat32Setter, };
// typeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, };
// typeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 32, setter: floatMat42Setter, };
// typeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 48, setter: floatMat43Setter, };
// typeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };
// typeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };
// typeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };
// typeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };
// typeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };
// typeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };
// typeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };
// typeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };
// typeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };
// typeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };
// typeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };
// typeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };
// typeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };
// typeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };
// typeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };
